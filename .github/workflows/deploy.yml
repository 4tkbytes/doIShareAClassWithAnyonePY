name: Deploy to Amazon ECS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY_FRONTEND: class-share-frontend
  ECR_REPOSITORY_BACKEND: class-share-backend
  ECS_SERVICE_FRONTEND: frontend-service
  ECS_SERVICE_BACKEND: backend-service
  ECS_CLUSTER: class-share-cluster
  ECS_TASK_DEFINITION_FRONTEND: .aws/frontend-task-definition.json
  ECS_TASK_DEFINITION_BACKEND: .aws/backend-task-definition.json

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push frontend image
      working-directory: ./frontend
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

    - name: Build and push backend image
      working-directory: ./backend
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }} .
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}

    - name: Fill in the new image ID in the Amazon ECS task definitions
      run: |
        sed -i 's|<IMAGE>|${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}|' ${{ env.ECS_TASK_DEFINITION_FRONTEND }}
        sed -i 's|<IMAGE>|${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}|' ${{ env.ECS_TASK_DEFINITION_BACKEND }}

    - name: Deploy Amazon ECS task definitions
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION_FRONTEND }}
        service: ${{ env.ECS_SERVICE_FRONTEND }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Deploy Backend ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION_BACKEND }}
        service: ${{ env.ECS_SERVICE_BACKEND }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true